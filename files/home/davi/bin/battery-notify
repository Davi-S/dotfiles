#!/usr/bin/env bash

# Battery Notify
# ==============
# Depends on `battery-manager`
#
# This is a script to send desktop notifications about the battery status.
#
# It can be called manually by passing itself to `battery-manager` (see `battery-manager` comments).
# It can also be called by `auto-battery-notify` (see `auto-battery-notify` comments)
#
# Usage:
#   $1: Battery level (percentage)
#   $2: Charging status ("Charging" or empty)
#   $3: Remaining time (e.g., "01:23:45")
#   $4+: Extra arguments (e.g., notification timeout multiplier).
#
# Behavior:
#   - Sends a critical notification if the battery level is below 15%.
#   - Sends a low battery notification if the battery level is below 30%.
#   - Sends a normal notification for other battery levels.
#   - Sends a charging notification if the battery is charging.

# Positional arguments
LEVEL=$1
CHARGING=$2
REMAINING_TIME=$3

# Extra arguments (if any)
EXTRA_ARGS=("${@:4}")

# Notification settings
MULTIPLIER=${EXTRA_ARGS[0]:-1}  # Default multiplier is 1
NORMAL_TIMEOUT=$((1000 * MULTIPLIER))
CRITICAL_TIMEOUT=$((1000000 * MULTIPLIER))

# Send notifications based on battery level and charging status
if [[ -z "$CHARGING" ]]; then
    if [[ "$LEVEL" -lt 15 ]]; then
        notify-send -u critical -t $CRITICAL_TIMEOUT "Battery Critical" "Battery is at $LEVEL% ($REMAINING_TIME remaining). Connect the charger!"
    elif [[ "$LEVEL" -lt 30 ]]; then
        notify-send -t $NORMAL_TIMEOUT "Battery Low" "Battery is at $LEVEL% ($REMAINING_TIME remaining)."
    else
        notify-send -t $NORMAL_TIMEOUT "Battery Status" "Battery is at $LEVEL% ($REMAINING_TIME remaining)."
    fi
else
    notify-send -t $NORMAL_TIMEOUT "Battery Status" "Battery is at $LEVEL% (Charging)."
fi
